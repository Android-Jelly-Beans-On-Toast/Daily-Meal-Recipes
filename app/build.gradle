apply plugin: 'com.android.application'

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

def apiKey = localProperties.getProperty("apiKey")
println apiKey
android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.example.myapp"
        versionCode 1
        versionName "1.0"

        if (apiKey != null) {
            println buildConfigFields.keySet()
            buildConfigField "String", "apiKey", apiKey
            println buildConfigFields.keySet()

        } else {
            throw new GradleException("API key not found in local.properties")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Add packagingOptions to resolve the conflict
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
    }
}

dependencies {
    implementation libs.appcompat.v120
    implementation libs.material.v130
    implementation libs.constraintlayout.v204
    implementation libs.generativeai
}
